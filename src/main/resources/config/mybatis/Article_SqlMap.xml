<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="studio.baxia.fo.dao.IArticleDao">

	<resultMap id="ArticleMap" type="studio.baxia.fo.pojo.Article">
		<result property="id" column="id" />
		<result property="title" column="title" />
		<result property="summary" column="summary" />
		<result property="content" column="content" />
		<result property="categoryIds" column="category_ids" />
		<result property="tagIds" column="tag_ids" />
		<result property="authorId" column="author_id" />
		<result property="status" column="status" />
		<result property="writeTime" column="write_time" />
		<result property="pubTime" column="pub_time" />
	</resultMap>
	<resultMap id="ArticleVoMap" type="studio.baxia.fo.vo.ArticleVo">
		<result property="id" column="id" />
		<result property="title" column="title" />
		<result property="summary" column="summary" />
		<result property="content" column="content" />
		<result property="categoryIds" column="category_ids" />
		<result property="categoryName" column="category_name" />
		<result property="tagIds" column="tag_ids" />
		<result property="authorId" column="author_id" />
		<result property="status" column="status" />
		<result property="writeTime" column="write_time" />
		<result property="pubTime" column="pub_time" />
	</resultMap>
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT
		INTO
		t_article(title,summary,content,category_ids,tag_ids,author_id,status,write_time,pub_time)
		VALUES
		(#{title,jdbcType=VARCHAR},
		#{summary,jdbcType=VARCHAR},
		#{content,jdbcType=VARCHAR},
		#{categoryIds,jdbcType=INTEGER},
		#{tagIds,jdbcType=VARCHAR},
		#{authorId,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER},
		#{writeTime,jdbcType=TIMESTAMP},
		#{pubTime,jdbcType=TIMESTAMP})
	</insert>

	<delete id="delete">
		DELETE FROM t_article
		WHERE
		id=#{id,jdbcType=INTEGER}
		AND
		author_id = #{authorId,jdbcType=INTEGER}
	</delete>

	<update id="update">
		UPDATE t_article
		SET
		title=#{title,jdbcType=VARCHAR},
		summary=#{summary,jdbcType=VARCHAR},
		content=#{content,jdbcType=VARCHAR},
		category_ids=#{categoryIds,jdbcType=INTEGER},
		tag_ids=#{tagIds,jdbcType=VARCHAR},
		status=#{status,jdbcType=INTEGER},
		write_time=#{writeTime,jdbcType=TIMESTAMP},
		pub_time=#{pubTime,jdbcType=TIMESTAMP}
		WHERE id =
		#{id,jdbcType=INTEGER}
		AND author_id = #{authorId,jdbcType=INTEGER}
	</update>
	<update id="updateStatus">
		UPDATE t_article
		SET
		status=#{status,jdbcType=INTEGER}
		WHERE id =#{id,jdbcType=INTEGER}
		AND author_id = #{authorId,jdbcType=INTEGER}
	</update>
	<select id="selectVoById" resultMap="ArticleVoMap">
		SELECT t1.*,t2.name as
		category_name
		FROM t_article t1
		LEFT JOIN t_category t2
		ON t1.category_ids = t2.id
		WHERE
		t1.id = #{id,jdbcType=INTEGER}
		AND
		t1.author_id = #{authorId,jdbcType=INTEGER}
		AND
		t1.category_ids = t2.id
	</select>
	<select id="selectById" resultMap="ArticleVoMap">
		SELECT *
		FROM t_article
		WHERE
		id
		= #{id,jdbcType=INTEGER}
		AND
		author_id = #{authorId,jdbcType=INTEGER}
	</select>
	<select id="selectVoByTitle" resultMap="ArticleVoMap">
		SELECT t1.*,t2.name as
		category_name
		FROM t_article t1
		LEFT JOIN t_category t2
		ON
		t1.category_ids = t2.id
		WHERE
		title = #{title,jdbcType=VARCHAR}
		AND
		t1.author_id = #{authorId,jdbcType=INTEGER}
		AND
		t1.category_ids = t2.id
	</select>

	<select id="selectBy" resultMap="ArticleMap">
		SELECT *
		FROM t_article
		<where>
			<if test="article.title!=null">
				AND title like CONCAT(CONCAT('%',
				#{article.title,jdbcType=VARCHAR}),
				'%')
			</if>
			<if test="article.authorId!=null">
				AND author_id = #{article.authorId,jdbcType=INTEGER}
			</if>
			<if test="article.categoryIds!=null">
				AND category_ids =
				#{article.categoryIds,jdbcType=INTEGER}
			</if>
			<if test="article.tagIds!=null">
				AND tag_ids like CONCAT(CONCAT('%',
				#{article.tagIds,jdbcType=VARCHAR}), '%')
			</if>
			<if test="article.status!=null">
				AND status =#{article.status,jdbcType=VARCHAR}
			</if>
		</where>
		ORDER BY write_time DESC
		LIMIT
		#{pageConfig.pageIndex,jdbcType=INTEGER},#{pageConfig.pageSize,jdbcType=INTEGER}
	</select>
	<select id="selectCountBy" resultType="Integer">
		SELECT COUNT(*)
		FROM t_article
		<where>
			<if test="article.title!=null">
				AND title like CONCAT(CONCAT('%',
				#{article.title,jdbcType=VARCHAR}),
				'%')
			</if>
			<if test="article.authorId!=null">
				AND author_id = #{article.authorId,jdbcType=INTEGER}
			</if>
			<if test="article.categoryIds!=null">
				AND category_ids =
				#{article.categoryIds,jdbcType=INTEGER}
			</if>
			<if test="article.tagIds!=null">
				AND tag_ids like CONCAT(CONCAT('%',
				#{article.tagIds,jdbcType=VARCHAR}), '%')
			</if>
			<if test="article.status!=null">
				AND status =#{article.status,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<select id="selectVoBy" resultMap="ArticleVoMap">
		SELECT t1.*,t2.name as category_name
		FROM t_article t1
		LEFT JOIN
		t_category t2
		ON t1.category_ids = t2.id
		<where>
			<if test="article.title!=null">
				AND t1.title like CONCAT(CONCAT('%',
				#{article.title,jdbcType=VARCHAR}), '%')
			</if>
			<if test="article.authorId!=null">
				AND t1.author_id = #{article.authorId,jdbcType=INTEGER}
			</if>
			<if test="article.categoryIds!=null">
				AND t1.category_ids =
				#{article.categoryIds,jdbcType=INTEGER}
			</if>
			<if test="article.tagIds!=null">
				AND t1.tag_ids like CONCAT(CONCAT('%',
				#{article.tagIds,jdbcType=VARCHAR}), '%')
			</if>
			<if test="article.status!=null">
				AND t1.status =#{article.status,jdbcType=VARCHAR}
			</if>
		</where>
		ORDER BY t1.write_time DESC
		LIMIT
		#{pageConfig.pageIndex,jdbcType=INTEGER},#{pageConfig.pageSize,jdbcType=INTEGER}
	</select>
</mapper>
